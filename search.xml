<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[docke02]]></title>
    <url>%2F2017%2F11%2F05%2Fdocker02%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title><![CDATA[一、认识docker]]></title>
    <url>%2F2017%2F11%2F05%2Fdocker01%2F</url>
    <content type="text"><![CDATA[docker诞生于2013年初，dotCloud公司用Go语言开发的开源项目 主要目的：一次封装，到处运行（对应用组件的封装、分发、部署、运行） Linux容器到Docker容器体现了容器技术与思维的进步 Docker容器类似沙盒，每个容器进行隔离，也可以通信，创建和停止非常快速 好处：更快的交付和部署、更高效的资源利用、 更轻松的迁移和扩展、更简单的更新管理 Docker比虚拟机的优势 特性 容器 虚拟机 启动速度 秒级 分钟级 硬盘使用 MB GB 性能 接近原生 弱于 系统支持量 上千个 一般几十个 隔离性 安全隔离 完全隔离 Docker容器在操作系统层面实现虚拟化，直接服用本机操作系统 核心概念 Docker镜像：类似虚拟机镜像，一个面向Docker引擎的制度模板，保护文件系统。创建Docker容器的基础 Docker容器：类似轻量级沙箱，Docker利用容器来运行和隔离运用 Docker仓库：类似代码仓库，用于存放镜像文件，设计理念与Git非常相似]]></content>
      <categories>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>理论</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[初步接触Chrome扩展应用开发]]></title>
    <url>%2F2017%2F11%2F02%2Fchrome01%2F</url>
    <content type="text"><![CDATA[Chrome是Google公司基于WebKit开发的一款浏览器1，但从某种角度上来说它已经超越了浏览器成为了一个平台甚至是一个操作系统。Chrome继承了WebKit内核对HTML的高速渲染，同时Google自行开发的V8引擎使得JavaScript在Chrome中的执行效率大幅提升，这使得更加高级复杂的JavaScript程序在Chrome中运行成为可能。 1 Chrome 28之后使用的Blink渲染引擎是WebKit中WebCore组件的一个分支。 Chrome浏览器除了页面渲染速度快，JavaScript执行速度快以外，另一大特点就是支持开发者为其编写各种各样的扩展来扩充其功能，用HTML5编写桌面程序，这使得Chrome变得更加强大。编写这样的程序就是本书所要讲解的内容。 本章首先对Chrome扩展应用进行简单概述，之后带着读者编写一个简单的扩展，使读者对扩展的认识更加深入。在讲解扩展Manifest文件格式时，也会简单讲解一下JSON数据格式2，避免没有接触过JSON的读者阅读后续的内容产生困难。另外本章也用一小节简单讲解了一下DOM，这对从未接触过网页编程的读者会非常有帮助。 2 JSON(JavaScript Object Notation) 是一种轻量级的数据交换格式。]]></content>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2017%2F11%2F01%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
